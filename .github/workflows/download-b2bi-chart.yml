      - name: Download and Extract Helm Chart
        run: |
          VERSION="${{ github.event.inputs.version }}"
          REPO_URL="https://github.com/IBM/charts/raw/master/repo/ibm-helm/"
          CHART_NAME="ibm-b2bi-prod-${VERSION}.tgz"
          DEST_DIR="ibm/b2bi"

          mkdir -p "$DEST_DIR"
          cd "$DEST_DIR"

          echo "üîç Looking for chart: $CHART_NAME"

          # Check if the file exists remotely
          STATUS=$(curl -o /dev/null -s -w "%{http_code}" "${REPO_URL}${CHART_NAME}")
          if [ "$STATUS" != "200" ]; then
            echo "‚ùå Chart not found at ${REPO_URL}${CHART_NAME}"
            echo "Trying to locate file via listing..."

            # Try to get a list of charts and extract matching name
            INDEX_URL="https://raw.githubusercontent.com/IBM/charts/master/repo/ibm-helm/index.yaml"
            MATCHED=$(curl -s $INDEX_URL | grep "name: ibm-b2bi-prod" -A 5 | grep "$VERSION" | grep url | grep ".tgz" | head -n1 | sed 's/.*url: //')

            if [ -z "$MATCHED" ]; then
              echo "‚ùå No chart found for version $VERSION in index.yaml"
              exit 1
            fi

            CHART_URL="${REPO_URL}${MATCHED}"
            echo "‚úÖ Found chart URL: $CHART_URL"
          else
            CHART_URL="${REPO_URL}${CHART_NAME}"
            echo "‚úÖ Chart URL is valid: $CHART_URL"
          fi

          echo "üì• Downloading chart..."
          curl -LO "$CHART_URL"

          FILE_NAME=$(basename "$CHART_URL")
          echo "üß™ Checking file type for $FILE_NAME"
          file "$FILE_NAME"

          if file "$FILE_NAME" | grep -q "gzip compressed data"; then
            echo "üì¶ Extracting chart..."
            tar -xzf "$FILE_NAME"
          else
            echo "‚ùå Downloaded file is not a valid gzip archive."
            exit 1
          fi
